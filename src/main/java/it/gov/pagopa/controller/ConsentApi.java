/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.34).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package it.gov.pagopa.controller;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import it.gov.pagopa.dto.ConsentDTO;
import it.gov.pagopa.dto.ConsentItemDTO;
import it.gov.pagopa.dto.ErrorDTO;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;
import java.util.List;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2022-07-25T10:00:50.525Z[GMT]")
@Validated
@RequestMapping("${openapi.idPayWelfarePortalUserPermissions.base-path:/idpay/authorization}")
public interface ConsentApi {

    @Operation(summary = "Retrive user consent", description = "", security = {
        @SecurityRequirement(name = "apiKeyHeader"),
@SecurityRequirement(name = "apiKeyQuery")    }, tags={ "Consent" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "Retriee consent successful", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ConsentDTO.class))),
        @ApiResponse(responseCode = "400", description = "Bad Request", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorDTO.class))),
        @ApiResponse(responseCode = "500", description = "Server ERROR", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorDTO.class))) })
    @GetMapping("/user/{userId}/consent")
    ResponseEntity<ConsentDTO> retrieveConsent(@PathVariable("userId") String userId, @Parameter(in = ParameterIn.HEADER, description = "" ,required=true,schema=@Schema()) @RequestHeader(value="Accept-Language", required=true) String acceptLanguage);


    @Operation(summary = "Save user consent", description = "", security = {
        @SecurityRequirement(name = "apiKeyHeader"),
@SecurityRequirement(name = "apiKeyQuery")    }, tags={ "Consent" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "204", description = "No Content - Consent Submit successful"),
        @ApiResponse(responseCode = "400", description = "Bad Request", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorDTO.class))),
        @ApiResponse(responseCode = "500", description = "Server ERROR", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorDTO.class))) })
    @PostMapping("/user/{userId}/consent")
    ResponseEntity<Void> saveConsent(@PathVariable("userId") String userId, @Parameter(in = ParameterIn.HEADER, description = "" ,required=true,schema=@Schema()) @RequestHeader(value="Accept-Language", required=true) String acceptLanguage, @Parameter(in = ParameterIn.DEFAULT, description = "Array of accepted consent", required=true, schema=@Schema()) @Valid @RequestBody List<ConsentItemDTO> body);

}

